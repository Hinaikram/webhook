pipeline {
    agent any

    environment {
        SSH_KEY = credentials('ubuntu (ServerlessPairkey1)')
        GITHUB_REPO = 'https://github.com/Hinaikram/webhook.git'
        S3_BUCKET = 'myawsbuckethina'
        SERVER_IP = 'ubuntu@ec2-3-106-139-109.ap-southeast-2.compute.amazonaws.com'
        APP_NAME = 'index.html'
    }

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World hello'
            }
        }

        stage('Clone the GIT') {
            steps {
                git branch: 'main', url: GITHUB_REPO
            }
        }

        stage('Pull from git') {
            steps {
                sshagent(['ubuntu (ServerlessPairkey1)']) {
                    sh "ssh -o StrictHostKeyChecking=no $SERVER_IP 'cd jenkins-lab && git pull'"
                }
            }
        }

        stage('Building docker') {
            steps {
                sshagent(['ubuntu (ServerlessPairkey1)']) {
                    sh "ssh -o StrictHostKeyChecking=no $SERVER_IP 'cd jenkins-lab && sudo docker build -t test_app:latest .'"
                }
            }
        }

        stage('Deploy') {
            steps {
                sshagent(['ubuntu (ServerlessPairkey1)']) {
                    sh "ssh -o StrictHostKeyChecking=no $SERVER_IP 'sudo docker stop test_app && sudo docker rm test_app'"
                }
            }
        }

        stage('Docker') {
            steps {
                sshagent(['ubuntu (ServerlessPairkey1)']) {
                    sh "ssh -o StrictHostKeyChecking=no $SERVER_IP 'sudo docker run --name test_app -itd -p 1234:5000 test_app'"
                }
            }
        }

        stage('Publish to S3') {
            steps {
                s3Upload(
                    entries: [[
                        bucket: S3_BUCKET,
                        sourceFile: APP_NAME,
                        noUploadOnFailure: false,
                        useServerSideEncryption: false,
                        selectedRegion: 'ap-southeast-2',
                        storageClass: 'STANDARD'
                    ]],
                    consoleLogLevel: 'INFO',
                    dontSetBuildResultOnFailure: false,
                    dontWaitForConcurrentBuildCompletion: false,
                    pluginFailureResultConstraint: 'FAILURE',
                    profileName: 's3profile',
                    userMetadata: []
                )
            }
        }
    }
}
